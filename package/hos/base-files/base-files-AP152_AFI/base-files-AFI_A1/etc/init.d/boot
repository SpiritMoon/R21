#!/bin/sh /etc/rc.common
# Copyright (C) 2006-2011 OpenWrt.org

START=10
STOP=98

update_upgrade_tag() {
    flag_file="/etc/cfm/upgrade-tag"
    line=`head -n1 $flag_file`
    if [ -z "$line" ]; then
        echo 1@`date` > $flag_file
    else
        sed -i 's/0@/1@/g' $flag_file
    fi
}

generate_version_file() {
    showver > /etc/cfm/config/config-pub/version
    PUB_CFG_DIR="/etc/cfm/config/config-pub"
    cd $PUB_CFG_DIR; rm -f pub-cfg-md5; md5sum * > pub-cfg-md5
}

encrypt_for_plain_passwd() {
    uci get system.sysinfo.encflag

    # if encflag option not exist
    if [ $? -ne 0 ]; then
        enc-plain boot

        cluster-cfg set system.sysinfo.encflag=1
        generate_version_file
    fi
}

uci_apply_defaults() {
	. /lib/functions/system.sh

	cd /etc/uci-defaults || return 0
	files="$(ls)"
	[ -z "$files" ] && return 0

    # if code goes here, then upgrade should be successful
    update_upgrade_tag

	mkdir -p /tmp/.uci
	for file in $files; do
		( . "./$(basename $file)" ) && rm -f "$file"
	done
	uci commit

    generate_version_file
}

kes_service() {

	local traps_flag=`cat /proc/kes_flag`

	if [ -f /proc/kes_debug_switch ] && [ -f /proc/kes_dmsg_switch ];then
		#cat /proc/kes_dmsg > /tmp/kes_dmsg.log
		#cat /proc/kes_debug > /tmp/kes_debug.log
		echo 1 > /proc/kes_dmsg_switch
		echo 1 > /proc/kes_debug_switch
	else
		touch /tmp/kes_load_failed
	fi

	if [ "$traps_flag" = "enable0" ];then
		cat /proc/kes_traps > /tmp/kes_history_traps.log
	fi

}

check_reset_reason()
{
	local syslog_flag=`cat /proc/kes_syslog_flag`
	local watchdog_reg=`devmem 0x18060008`

	if [ "$watchdog_reg" == 0x80000003 ];then
		# watchdog reboot
		/usr/sbin/reset_reason add 09
	elif [ "$syslog_flag" != "enable0" ];then
		# power off reboot
		/usr/sbin/reset_reason add 00
	fi
}

setting_eth_mac() {
	local mac="$(/usr/sbin/showsysinfo|/bin/grep 'MAC:'|/usr/bin/cut -d: -f2-7)"
	ifconfig eth0 down
	ifconfig eth0 hw ether "$mac"
	ifconfig eth0 up
}

boot() {
	[ -f /proc/mounts ] || /sbin/mount_root
	[ -f /proc/jffs2_bbc ] && echo "S" > /proc/jffs2_bbc
	[ -f /proc/net/vlan/config ] && vconfig set_name_type DEV_PLUS_VID_NO_PAD
	[ -f /etc/cfm/lock ] && rm /etc/cfm/lock

	mkdir -p /var/run
	mkdir -p /var/log
	mkdir -p /var/lock
	mkdir -p /var/state
	mkdir -p /tmp/.uci
	chmod 0700 /tmp/.uci
	touch /var/log/wtmp
	touch /var/log/lastlog
	touch /tmp/resolv.conf.auto
	ln -sf /tmp/resolv.conf.auto /tmp/resolv.conf
	grep -q debugfs /proc/filesystems && /bin/mount -o noatime -t debugfs debugfs /sys/kernel/debug
	[ "$FAILSAFE" = "true" ] && touch /tmp/.failsafe

	/sbin/kmodloader

	# allow wifi modules time to settle
	sleep 1

	/sbin/wifi detect > /tmp/wireless.tmp
	[ -s /tmp/wireless.tmp ] && {
		cat /tmp/wireless.tmp >> /etc/config/wireless
	}
	rm -f /tmp/wireless.tmp

	uci_apply_defaults
    encrypt_for_plain_passwd

	# temporary hack until configd exists
	/sbin/reload_config

	# create /dev/root if it doesn't exist
	[ -e /dev/root -o -h /dev/root ] || {
		rootdev=$(awk 'BEGIN { RS=" "; FS="="; } $1 == "root" { print $2 }' < /proc/cmdline)
		[ -n "$rootdev" ] && ln -s "$rootdev" /dev/root
	}

	kes_service
	check_reset_reason
	setting_eth_mac
}
